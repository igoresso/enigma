(function () {
  'use strict';

  const Alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
  const Layout = ['Q', 'W', 'E', 'R', 'T', 'Z', 'U', 'I', 'O', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'P', 'Y', 'X', 'C', 'V', 'B', 'N', 'M', 'L'];
  const RotorOption = {
    I: {
      alphabet: ['E', 'K', 'M', 'F', 'L', 'G', 'D', 'Q', 'V', 'Z', 'N', 'T', 'O', 'W', 'Y', 'H', 'X', 'U', 'S', 'P', 'A', 'I', 'B', 'R', 'C', 'J'],
      notch: 'Q'
    },
    II: {
      alphabet: ['A', 'J', 'D', 'K', 'S', 'I', 'R', 'U', 'X', 'B', 'L', 'H', 'W', 'T', 'M', 'C', 'Q', 'G', 'Z', 'N', 'P', 'Y', 'F', 'V', 'O', 'E'],
      notch: 'E'
    },
    III: {
      alphabet: ['B', 'D', 'F', 'H', 'J', 'L', 'C', 'P', 'R', 'T', 'X', 'V', 'Z', 'N', 'Y', 'E', 'I', 'W', 'G', 'A', 'K', 'M', 'U', 'S', 'Q', 'O'],
      notch: 'V'
    },
    IV: {
      alphabet: ['E', 'S', 'O', 'V', 'P', 'Z', 'J', 'A', 'Y', 'Q', 'U', 'I', 'R', 'H', 'X', 'L', 'N', 'F', 'T', 'G', 'K', 'D', 'C', 'M', 'W', 'B'],
      notch: 'J'
    },
    V: {
      alphabet: ['V', 'Z', 'B', 'R', 'G', 'I', 'T', 'Y', 'U', 'P', 'S', 'D', 'N', 'H', 'L', 'X', 'A', 'W', 'M', 'J', 'Q', 'O', 'F', 'E', 'C', 'K'],
      notch: 'Z'
    }
  };
  const ReflectorOption = {
    A: ['E', 'J', 'M', 'Z', 'A', 'L', 'Y', 'X', 'V', 'B', 'W', 'F', 'C', 'R', 'Q', 'U', 'O', 'N', 'T', 'S', 'P', 'I', 'K', 'H', 'G', 'D'],
    B: ['Y', 'R', 'U', 'H', 'Q', 'S', 'L', 'D', 'P', 'X', 'N', 'G', 'O', 'K', 'M', 'I', 'E', 'B', 'F', 'Z', 'C', 'W', 'V', 'J', 'A', 'T'],
    C: ['F', 'V', 'P', 'J', 'I', 'A', 'O', 'Y', 'E', 'D', 'R', 'Z', 'X', 'W', 'G', 'C', 'T', 'K', 'U', 'Q', 'S', 'B', 'N', 'M', 'H', 'L']
  };

  class Rotors {
    constructor(classAttribute) {
      this.rotors = Array.from(document.querySelectorAll(classAttribute)).reverse();
      this.valueIndex = [];
    }
    setValue(rotorIndex, value) {
      const rotor = this.rotors[rotorIndex];
      const valueIndex = Alphabet.indexOf(value);
      const mainWindow = rotor.querySelector('.rotors__window--active');
      const firstNextWindow = mainWindow.previousElementSibling;
      const secondNextWindow = firstNextWindow.previousElementSibling;
      const firstPrevWindow = mainWindow.nextElementSibling;
      const secondPrevWindow = firstPrevWindow.nextElementSibling;
      const wheel = rotor.querySelector('.rotors__wheel');
      const firstNextValueIndex = valueIndex + 1 > 25 ? 0 : valueIndex + 1;
      const secondNextValueIndex = valueIndex + 2 > 25 ? valueIndex - 26 + 2 : valueIndex + 2;
      const firstPrevValueIndex = valueIndex - 1 < 0 ? 25 : valueIndex - 1;
      const secondPrevValueIndex = valueIndex - 2 < 0 ? valueIndex + 26 - 2 : valueIndex - 2;
      mainWindow.value = Alphabet[valueIndex];
      firstNextWindow.innerText = Alphabet[firstNextValueIndex];
      secondNextWindow.innerText = Alphabet[secondNextValueIndex];
      firstPrevWindow.innerText = Alphabet[firstPrevValueIndex];
      secondPrevWindow.innerText = Alphabet[secondPrevValueIndex];
      wheel.style.backgroundPositionY = valueIndex * 100 / 26 * 7 + '%';
      this.valueIndex[rotorIndex] = valueIndex;
    }
    stepRotor(rotorIndex) {
      const newValueIndex = this.valueIndex[rotorIndex] + 1 > 25 ? 0 : this.valueIndex[rotorIndex] + 1;
      const newValue = Alphabet[newValueIndex];
      this.setValue(rotorIndex, newValue);
    }
    getCurrentState() {
      return this.valueIndex;
    }
    bind() {
      for (let [index, rotor] of this.rotors.entries()) {
        const btnNext = rotor.querySelector('.rotors__btn--next');
        const btnPrev = rotor.querySelector('.rotors__btn--prev');
        const input = rotor.querySelector('input');
        btnNext.onclick = () => {
          const currentValueIndex = this.valueIndex[index];
          const newValueIndex = currentValueIndex + 1 > 25 ? 0 : currentValueIndex + 1;
          this.setValue(index, Alphabet[newValueIndex]);
        };
        btnPrev.onclick = () => {
          const currentValueIndex = this.valueIndex[index];
          const newValueIndex = currentValueIndex - 1 < 0 ? 25 : currentValueIndex - 1;
          this.setValue(index, Alphabet[newValueIndex]);
        };
        input.onkeypress = e => {
          e.stopPropagation();
        };
        input.onchange = () => {
          if (input.validity.valid && input.value.length > 0) {
            input.value = input.value.toUpperCase();
            this.setValue(index, input.value);
          } else {
            this.setValue(index, Alphabet[this.valueIndex[index]]);
          }
        };
      }
    }
    reset() {
      for (let i = 0; i < this.rotors.length; i++) {
        this.setValue(i, 'A');
      }
    }
    init() {
      this.reset();
      this.bind();
    }
  }
  const rotors = new Rotors('.rotors__item');

  class Lampboard {
    constructor(classAttribute) {
      this.lamps = document.querySelectorAll(classAttribute);
      this.lastIndex = null;
    }
    newOutput(letter) {
      const newIndex = Layout.indexOf(letter);
      this.reset();
      this.lamps[newIndex].classList.add('lampboard__lamp--active');
      this.lastIndex = newIndex;
    }
    reset() {
      const currentIndex = this.lastIndex || 0;
      this.lamps[currentIndex].classList.remove('lampboard__lamp--active');
      this.lastIndex = null;
    }
  }
  const lampboard = new Lampboard('.lampboard__lamp');

  class Keyboard {
    constructor(classAttribute) {
      this.keys = document.querySelectorAll(classAttribute);
    }
    inputAction(letter) {
      return letter;
    }
    bind() {
      for (let key of this.keys) {
        const letter = key.innerText.toUpperCase();
        key.onclick = () => {
          this.inputAction(letter);
        };
      }
      document.onkeydown = e => {
        const re = /^[A-Z]{1}/;
        const key = e.key.toUpperCase();
        if (re.test(key)) {
          this.inputAction(key);
        }
      };
    }
    init() {
      this.bind();
    }
  }
  const keyboard = new Keyboard('.keyboard__btn');

  class Plugboard {
    constructor(classAttribute) {
      this.sockets = document.querySelectorAll(classAttribute);
      this.connections = {};
      this.prevSocket = null;
    }
    createPlug(pairLetter) {
      const plug = document.createElement('div');
      plug.classList.add('plugboard__plug');
      plug.tabIndex = 0;
      plug.setAttribute('role', 'button');
      plug.innerText = pairLetter.toUpperCase();
      return plug;
    }
    disconnectSockets(plug1, plug2, letter1, letter2) {
      plug1.remove();
      plug2.remove();
      delete this.connections[letter1];
      delete this.connections[letter2];
    }
    connectSockets(socket1, socket2) {
      const letter1 = socket2.querySelector('span').innerText;
      const letter2 = socket1.querySelector('span').innerText;
      const plug1 = this.createPlug(letter1);
      const plug2 = this.createPlug(letter2);
      plug1.onclick = e => {
        e.stopPropagation();
        this.disconnectSockets(plug1, plug2, letter1, letter2);
      };
      plug2.onclick = e => {
        e.stopPropagation();
        this.disconnectSockets(plug1, plug2, letter1, letter2);
      };
      socket1.appendChild(plug1);
      socket2.appendChild(plug2);
      this.connections[letter1] = letter2;
      this.connections[letter2] = letter1;
    }
    reset() {
      for (let socket of this.sockets) {
        const plug = socket.querySelector('.plugboard__plug');
        if (!plug) {
          continue;
        }
        plug.remove();
      }
      this.connections = {};
    }
    bind() {
      for (let socket of this.sockets) {
        socket.onclick = () => {
          if (this.prevSocket && this.prevSocket !== socket) {
            this.connectSockets(socket, this.prevSocket);
            socket.blur();
            this.prevSocket = null;
          } else {
            this.prevSocket = socket;
          }
        };
      }
    }
    init() {
      this.bind();
    }
  }
  const plugboard = new Plugboard('.plugboard__socket');

  class Settings {
    constructor(classDialogue, classToggle, classSelect) {
      this.dialogueClass = classDialogue;
      this.toggleClass = classToggle;
      this.selectClass = classSelect;
    }
    changeRotor(rotor, value) {
      return [rotor, value];
    }
    changeReflector(value) {
      return value;
    }
    createOption(value) {
      const option = document.createElement('option');
      option.value = value;
      option.innerText = value;
      return option;
    }
    bind() {
      const dialogue = document.querySelector(`.${this.dialogueClass}`);
      const toggle = document.querySelector(`.${this.toggleClass}`);
      const selects = Array.from(document.querySelectorAll(`.${this.selectClass}`));
      const reflectors = Object.keys(ReflectorOption);
      const rotors = Object.keys(RotorOption);
      toggle.onclick = () => {
        toggle.classList.toggle(`${this.toggleClass}--active`);
        dialogue.classList.toggle(`${this.dialogueClass}--active`);
      };
      reflectors.forEach(item => {
        selects[0].appendChild(this.createOption(item));
      });
      selects[0].onchange = () => {
        this.changeReflector(selects[0].value);
        selects[0].blur();
      };
      for (let i = 1; i < selects.length; i++) {
        rotors.forEach(item => {
          selects[i].appendChild(this.createOption(item));
        });
        selects[i].onchange = () => {
          this.changeRotor(3 - i, selects[i].value);
          selects[i].blur();
        };
      }
    }
    init() {
      this.bind();
      this.reset();
    }
    reset() {
      const selects = Array.from(document.querySelectorAll(`.${this.selectClass}`));
      selects[0].value = 'B';
      selects[1].value = 'I';
      selects[2].value = 'II';
      selects[3].value = 'III';
    }
  }
  const settings = new Settings('settings__dialogue', 'settings__toggle', 'settings__select');

  class Message {
    constructor(classModal, classToggle, idDate, idTime, classInput, idCheckbox, classSubmit, classOutput) {
      this.modalClass = classModal;
      this.toggleClass = classToggle;
      this.dateID = idDate;
      this.timeID = idTime;
      this.inputClass = classInput;
      this.checkboxID = idCheckbox;
      this.submitClass = classSubmit;
      this.outputClass = classOutput;
      this.month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    }
    setTime() {
      const dateArea = document.getElementById(this.dateID);
      const timeArea = document.getElementById(this.timeID);
      let today = new Date();
      let dd = today.getDate();
      let mm = today.getMonth();
      let yyyy = today.getFullYear();
      let hours = today.getHours();
      let minutes = today.getMinutes();
      dateArea.innerText = `${dd} ${this.month[mm]} ${yyyy}`;
      if (dd < 10) {
        dd = '0' + dd;
      }
      mm += 1;
      if (mm < 10) {
        mm = '0' + mm;
      }
      dateArea.dateTime = `${yyyy}-${mm}-${dd}`;
      timeArea.innerText = `${hours}:${minutes}`;
      timeArea.dateTime = `${hours}:${minutes}`;
    }
    encryptText(text) {
      return text;
    }
    bind() {
      const modal = document.querySelector(`.${this.modalClass}`);
      const toggle = document.querySelector(`.${this.toggleClass}`);
      const content = modal.querySelector(`.${this.modalClass}__content`);
      const input = document.querySelector(`.${this.inputClass}`);
      const checkbox = document.getElementById(this.checkboxID);
      const submit = document.querySelector(`.${this.submitClass}`);
      const output = document.querySelector(`.${this.outputClass}`);
      toggle.onclick = () => {
        modal.classList.add(`${this.modalClass}--active`);
        this.setTime();
      };
      modal.onclick = () => {
        modal.classList.remove(`${this.modalClass}--active`);
      };
      content.onclick = e => {
        e.stopPropagation();
      };
      input.onkeyup = e => {
        e.stopPropagation();
        const re = /[^A-Za-z\s]/g;
        input.value = input.value.replace(re, '');
        input.value = input.value.toUpperCase();
      };
      submit.onclick = () => {
        let text = input.value;
        if (!checkbox.checked) {
          text = text.replace(/ /g, '').match(/.{1,5}/g).join(' ');
        }
        output.innerText = this.encryptText(text);
      };
    }
    init() {
      this.bind();
    }
  }
  const message = new Message('modal', 'modal__toggle', 'date', 'time', 'message__input', 'keep-formatting', 'message__btn', 'message__output');

  class Enigma {
    constructor() {}
    sumValues(a, b) {
      return a + b > 25 ? a - 26 + b : a + b;
    }
    subValues(a, b) {
      return a - b < 0 ? a + 26 - b : a - b;
    }
    encrypt(letter, rotors, rotorPositions, reflector) {
      let result;
      const letterIndex = Alphabet.indexOf(letter);
      const numberOfRotors = rotorPositions.length;
      for (let i = 0; i < numberOfRotors; i++) {
        if (i == 0) {
          result = Alphabet.indexOf(rotors[i][this.sumValues(rotorPositions[i], letterIndex)]);
        } else {
          result = Alphabet.indexOf(rotors[i][this.sumValues(result, this.subValues(rotorPositions[i], rotorPositions[i - 1]))]);
        }
      }
      result = rotors[numberOfRotors - 1].indexOf(Alphabet[this.sumValues(Alphabet.indexOf(reflector[this.subValues(result, rotorPositions[numberOfRotors - 1])]), rotorPositions[numberOfRotors - 1])]);
      for (let i = numberOfRotors - 1; i >= 0; i--) {
        if (i == 0) {
          result = this.subValues(result, rotorPositions[0]);
        } else {
          result = rotors[i - 1].indexOf(Alphabet[this.subValues(result, this.subValues(rotorPositions[i], rotorPositions[i - 1]))]);
        }
      }
      result = Alphabet[result];
      return result;
    }
  }
  const enigma = new Enigma();

  class App {
    constructor(rotorSet, rotorSetNotch, reflector) {
      this.rotorSet = rotorSet;
      this.rotorSetNotch = rotorSetNotch;
      this.reflector = reflector;
    }
    init() {
      keyboard.init();
      plugboard.init();
      rotors.init();
      settings.init();
      message.init();
      const resetButton = document.querySelector('.reset');
      resetButton.onclick = () => {
        resetButton.disabled = true;
        resetButton.style.transitionDuration = '0.5s';
        resetButton.style.transform = 'rotate(360deg)';
        this.reset();
        setTimeout(() => {
          resetButton.disabled = false;
          resetButton.style.transitionDuration = '0s';
          resetButton.style.transform = '';
        }, 500);
      };
    }
    reset() {
      rotors.reset();
      lampboard.reset();
      plugboard.reset();
    }
    changeRotor(rotor, notch, rotorIndex) {
      this.rotorSet[rotorIndex] = rotor;
      this.rotorSetNotch[rotorIndex] = notch;
    }
    changeReflector(reflector) {
      this.reflector = reflector;
    }
    inputAction(letter) {
      if (letter in plugboard.connections) {
        letter = plugboard.connections[letter];
      }
      const rotorsToStep = [0];
      for (let i = 0; i < this.rotorSet.length - 1; i++) {
        const currentValue = Alphabet[rotors.valueIndex[i]];
        if (currentValue == this.rotorSetNotch[i]) {
          rotorsToStep.push(i + 1);
        } else {
          break;
        }
      }
      rotorsToStep.forEach(item => {
        rotors.stepRotor(item);
      });
      let result = enigma.encrypt(letter, this.rotorSet, rotors.valueIndex, this.reflector);
      if (result in plugboard.connections) {
        result = plugboard.connections[result];
      }
      lampboard.newOutput(result);
      return result;
    }
  }
  const app = new App([RotorOption.III.alphabet, RotorOption.II.alphabet, RotorOption.I.alphabet], [RotorOption.III.notch, RotorOption.II.notch, RotorOption.I.notch], ReflectorOption.B);
  app.init();
  keyboard.inputAction = letter => {
    app.inputAction(letter);
  };
  settings.changeReflector = value => {
    app.reflector = ReflectorOption[value];
    app.reset();
  };
  settings.changeRotor = (rotor, value) => {
    app.rotorSet[rotor] = RotorOption[value]['alphabet'];
    app.rotorSetNotch[rotor] = RotorOption[value]['notch'];
    app.reset();
  };
  message.encryptText = text => {
    let output = '';
    for (let i = 0; i < text.length; i++) {
      if (text[i] == ' ') {
        output += text[i];
      } else {
        output += app.inputAction(text[i]);
      }
    }
    return output;
  };

})();
//# sourceMappingURL=main.js.map

//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"file":"main.js","sources":["source/js/data.js","source/js/rotors.js","source/js/lampboard.js","source/js/keyboard.js","source/js/plugboard.js","source/js/settings.js","source/js/message.js","source/js/enigma.js","source/js/main.js"],"sourcesContent":["export const Alphabet = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n];\n\nexport const Layout = [\n  'Q',\n  'W',\n  'E',\n  'R',\n  'T',\n  'Z',\n  'U',\n  'I',\n  'O',\n  'A',\n  'S',\n  'D',\n  'F',\n  'G',\n  'H',\n  'J',\n  'K',\n  'P',\n  'Y',\n  'X',\n  'C',\n  'V',\n  'B',\n  'N',\n  'M',\n  'L',\n];\n\nexport const RotorOption = {\n  I: {\n    alphabet: [\n      'E',\n      'K',\n      'M',\n      'F',\n      'L',\n      'G',\n      'D',\n      'Q',\n      'V',\n      'Z',\n      'N',\n      'T',\n      'O',\n      'W',\n      'Y',\n      'H',\n      'X',\n      'U',\n      'S',\n      'P',\n      'A',\n      'I',\n      'B',\n      'R',\n      'C',\n      'J',\n    ],\n    notch: 'Q',\n  },\n  II: {\n    alphabet: [\n      'A',\n      'J',\n      'D',\n      'K',\n      'S',\n      'I',\n      'R',\n      'U',\n      'X',\n      'B',\n      'L',\n      'H',\n      'W',\n      'T',\n      'M',\n      'C',\n      'Q',\n      'G',\n      'Z',\n      'N',\n      'P',\n      'Y',\n      'F',\n      'V',\n      'O',\n      'E',\n    ],\n    notch: 'E',\n  },\n  III: {\n    alphabet: [\n      'B',\n      'D',\n      'F',\n      'H',\n      'J',\n      'L',\n      'C',\n      'P',\n      'R',\n      'T',\n      'X',\n      'V',\n      'Z',\n      'N',\n      'Y',\n      'E',\n      'I',\n      'W',\n      'G',\n      'A',\n      'K',\n      'M',\n      'U',\n      'S',\n      'Q',\n      'O',\n    ],\n    notch: 'V',\n  },\n  IV: {\n    alphabet: [\n      'E',\n      'S',\n      'O',\n      'V',\n      'P',\n      'Z',\n      'J',\n      'A',\n      'Y',\n      'Q',\n      'U',\n      'I',\n      'R',\n      'H',\n      'X',\n      'L',\n      'N',\n      'F',\n      'T',\n      'G',\n      'K',\n      'D',\n      'C',\n      'M',\n      'W',\n      'B',\n    ],\n    notch: 'J',\n  },\n  V: {\n    alphabet: [\n      'V',\n      'Z',\n      'B',\n      'R',\n      'G',\n      'I',\n      'T',\n      'Y',\n      'U',\n      'P',\n      'S',\n      'D',\n      'N',\n      'H',\n      'L',\n      'X',\n      'A',\n      'W',\n      'M',\n      'J',\n      'Q',\n      'O',\n      'F',\n      'E',\n      'C',\n      'K',\n    ],\n    notch: 'Z',\n  },\n};\n\nexport const ReflectorOption = {\n  A: [\n    'E',\n    'J',\n    'M',\n    'Z',\n    'A',\n    'L',\n    'Y',\n    'X',\n    'V',\n    'B',\n    'W',\n    'F',\n    'C',\n    'R',\n    'Q',\n    'U',\n    'O',\n    'N',\n    'T',\n    'S',\n    'P',\n    'I',\n    'K',\n    'H',\n    'G',\n    'D',\n  ],\n  B: [\n    'Y',\n    'R',\n    'U',\n    'H',\n    'Q',\n    'S',\n    'L',\n    'D',\n    'P',\n    'X',\n    'N',\n    'G',\n    'O',\n    'K',\n    'M',\n    'I',\n    'E',\n    'B',\n    'F',\n    'Z',\n    'C',\n    'W',\n    'V',\n    'J',\n    'A',\n    'T',\n  ],\n  C: [\n    'F',\n    'V',\n    'P',\n    'J',\n    'I',\n    'A',\n    'O',\n    'Y',\n    'E',\n    'D',\n    'R',\n    'Z',\n    'X',\n    'W',\n    'G',\n    'C',\n    'T',\n    'K',\n    'U',\n    'Q',\n    'S',\n    'B',\n    'N',\n    'M',\n    'H',\n    'L',\n  ],\n};\n","import { Alphabet } from './data';\n\nclass Rotors {\n  constructor(classAttribute) {\n    this.rotors = Array.from(document.querySelectorAll(classAttribute)).reverse();\n    this.valueIndex = [];\n  }\n\n  setValue(rotorIndex, value) {\n    const rotor = this.rotors[rotorIndex];\n    const valueIndex = Alphabet.indexOf(value);\n\n    const mainWindow = rotor.querySelector('.rotors__window--active');\n    const firstNextWindow = mainWindow.previousElementSibling;\n    const secondNextWindow = firstNextWindow.previousElementSibling;\n    const firstPrevWindow = mainWindow.nextElementSibling;\n    const secondPrevWindow = firstPrevWindow.nextElementSibling;\n    const wheel = rotor.querySelector('.rotors__wheel');\n\n    const firstNextValueIndex = valueIndex + 1 > 25 ? 0 : valueIndex + 1;\n    const secondNextValueIndex = valueIndex + 2 > 25 ? valueIndex - 26 + 2 : valueIndex + 2;\n    const firstPrevValueIndex = valueIndex - 1 < 0 ? 25 : valueIndex - 1;\n    const secondPrevValueIndex = valueIndex - 2 < 0 ? valueIndex + 26 - 2 : valueIndex - 2;\n\n    mainWindow.value = Alphabet[valueIndex];\n    firstNextWindow.innerText = Alphabet[firstNextValueIndex];\n    secondNextWindow.innerText = Alphabet[secondNextValueIndex];\n    firstPrevWindow.innerText = Alphabet[firstPrevValueIndex];\n    secondPrevWindow.innerText = Alphabet[secondPrevValueIndex];\n\n    wheel.style.backgroundPositionY = ((valueIndex * 100) / 26) * 7 + '%';\n    this.valueIndex[rotorIndex] = valueIndex;\n  }\n\n  stepRotor(rotorIndex) {\n    const newValueIndex = this.valueIndex[rotorIndex] + 1 > 25 ? 0 : this.valueIndex[rotorIndex] + 1;\n    const newValue = Alphabet[newValueIndex];\n    this.setValue(rotorIndex, newValue);\n  }\n\n  getCurrentState() {\n    return this.valueIndex;\n  }\n\n  bind() {\n    for (let [index, rotor] of this.rotors.entries()) {\n      const btnNext = rotor.querySelector('.rotors__btn--next');\n      const btnPrev = rotor.querySelector('.rotors__btn--prev');\n      const input = rotor.querySelector('input');\n\n      btnNext.onclick = () => {\n        const currentValueIndex = this.valueIndex[index];\n        const newValueIndex = currentValueIndex + 1 > 25 ? 0 : currentValueIndex + 1;\n        this.setValue(index, Alphabet[newValueIndex]);\n      };\n\n      btnPrev.onclick = () => {\n        const currentValueIndex = this.valueIndex[index];\n        const newValueIndex = currentValueIndex - 1 < 0 ? 25 : currentValueIndex - 1;\n        this.setValue(index, Alphabet[newValueIndex]);\n      };\n\n      input.onkeypress = e => {\n        e.stopPropagation();\n      };\n\n      input.onchange = () => {\n        if (input.validity.valid && input.value.length > 0) {\n          input.value = input.value.toUpperCase();\n          this.setValue(index, input.value);\n        } else {\n          this.setValue(index, Alphabet[this.valueIndex[index]]);\n        }\n      };\n    }\n  }\n\n  reset() {\n    for (let i = 0; i < this.rotors.length; i++) {\n      this.setValue(i, 'A');\n    }\n  }\n\n  init() {\n    this.reset();\n    this.bind();\n  }\n}\n\nconst rotors = new Rotors('.rotors__item');\nexport default rotors;\n","import { Layout } from './data';\n\nclass Lampboard {\n  constructor(classAttribute) {\n    this.lamps = document.querySelectorAll(classAttribute);\n    this.lastIndex = null;\n  }\n\n  newOutput(letter) {\n    const newIndex = Layout.indexOf(letter);\n    this.reset();\n    this.lamps[newIndex].classList.add('lampboard__lamp--active');\n    this.lastIndex = newIndex;\n  }\n\n  reset() {\n    const currentIndex = this.lastIndex || 0;\n    this.lamps[currentIndex].classList.remove('lampboard__lamp--active');\n    this.lastIndex = null;\n  }\n}\n\nconst lampboard = new Lampboard('.lampboard__lamp');\nexport default lampboard;\n","class Keyboard {\n  constructor(classAttribute) {\n    this.keys = document.querySelectorAll(classAttribute);\n  }\n\n  inputAction(letter) {\n    return letter;\n  }\n\n  bind() {\n    for (let key of this.keys) {\n      const letter = key.innerText.toUpperCase();\n\n      key.onclick = () => {\n        this.inputAction(letter);\n      };\n    }\n\n    document.onkeydown = e => {\n      const re = /^[A-Z]{1}/;\n      const key = e.key.toUpperCase();\n\n      if (re.test(key)) {\n        this.inputAction(key);\n      }\n    };\n  }\n\n  init() {\n    this.bind();\n  }\n}\n\nconst keyboard = new Keyboard('.keyboard__btn');\nexport default keyboard;\n","class Plugboard {\n  constructor(classAttribute) {\n    this.sockets = document.querySelectorAll(classAttribute);\n    this.connections = {};\n    this.prevSocket = null;\n  }\n\n  createPlug(pairLetter) {\n    const plug = document.createElement('div');\n    plug.classList.add('plugboard__plug');\n    plug.tabIndex = 0;\n    plug.setAttribute('role', 'button');\n    plug.innerText = pairLetter.toUpperCase();\n    return plug;\n  }\n\n  disconnectSockets(plug1, plug2, letter1, letter2) {\n    plug1.remove();\n    plug2.remove();\n    delete this.connections[letter1];\n    delete this.connections[letter2];\n  }\n\n  connectSockets(socket1, socket2) {\n    const letter1 = socket2.querySelector('span').innerText;\n    const letter2 = socket1.querySelector('span').innerText;\n    const plug1 = this.createPlug(letter1);\n    const plug2 = this.createPlug(letter2);\n\n    plug1.onclick = e => {\n      e.stopPropagation();\n      this.disconnectSockets(plug1, plug2, letter1, letter2);\n    };\n\n    plug2.onclick = e => {\n      e.stopPropagation();\n      this.disconnectSockets(plug1, plug2, letter1, letter2);\n    };\n\n    socket1.appendChild(plug1);\n    socket2.appendChild(plug2);\n    this.connections[letter1] = letter2;\n    this.connections[letter2] = letter1;\n  }\n\n  reset() {\n    for (let socket of this.sockets) {\n      const plug = socket.querySelector('.plugboard__plug');\n      if (!plug) {\n        continue;\n      }\n      plug.remove();\n    }\n\n    this.connections = {};\n  }\n\n  bind() {\n    for (let socket of this.sockets) {\n      socket.onclick = () => {\n        if (this.prevSocket && this.prevSocket !== socket) {\n          this.connectSockets(socket, this.prevSocket);\n          socket.blur();\n          this.prevSocket = null;\n        } else {\n          this.prevSocket = socket;\n        }\n      };\n    }\n  }\n\n  init() {\n    this.bind();\n  }\n}\n\nconst plugboard = new Plugboard('.plugboard__socket');\nexport default plugboard;\n","import { RotorOption, ReflectorOption } from './data';\n\nclass Settings {\n  constructor(classDialogue, classToggle, classSelect) {\n    this.dialogueClass = classDialogue;\n    this.toggleClass = classToggle;\n    this.selectClass = classSelect;\n  }\n\n  changeRotor(rotor, value) {\n    return [rotor, value];\n  }\n\n  changeReflector(value) {\n    return value;\n  }\n\n  createOption(value) {\n    const option = document.createElement('option');\n    option.value = value;\n    option.innerText = value;\n    return option;\n  }\n\n  bind() {\n    const dialogue = document.querySelector(`.${this.dialogueClass}`);\n    const toggle = document.querySelector(`.${this.toggleClass}`);\n    const selects = Array.from(document.querySelectorAll(`.${this.selectClass}`));\n\n    const reflectors = Object.keys(ReflectorOption);\n    const rotors = Object.keys(RotorOption);\n\n    toggle.onclick = () => {\n      toggle.classList.toggle(`${this.toggleClass}--active`);\n      dialogue.classList.toggle(`${this.dialogueClass}--active`);\n    };\n\n    reflectors.forEach(item => {\n      selects[0].appendChild(this.createOption(item));\n    });\n\n    selects[0].onchange = () => {\n      this.changeReflector(selects[0].value);\n      selects[0].blur();\n    };\n\n    for (let i = 1; i < selects.length; i++) {\n      rotors.forEach(item => {\n        selects[i].appendChild(this.createOption(item));\n      });\n\n      selects[i].onchange = () => {\n        this.changeRotor(3 - i, selects[i].value);\n        selects[i].blur();\n      };\n    }\n  }\n\n  init() {\n    this.bind();\n    this.reset();\n  }\n\n  reset() {\n    const selects = Array.from(document.querySelectorAll(`.${this.selectClass}`));\n    selects[0].value = 'B';\n    selects[1].value = 'I';\n    selects[2].value = 'II';\n    selects[3].value = 'III';\n  }\n}\n\nconst settings = new Settings('settings__dialogue', 'settings__toggle', 'settings__select');\nexport default settings;\n","class Message {\n  constructor(classModal, classToggle, idDate, idTime, classInput, idCheckbox, classSubmit, classOutput) {\n    this.modalClass = classModal;\n    this.toggleClass = classToggle;\n    this.dateID = idDate;\n    this.timeID = idTime;\n    this.inputClass = classInput;\n    this.checkboxID = idCheckbox;\n    this.submitClass = classSubmit;\n    this.outputClass = classOutput;\n    this.month = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n  }\n\n  setTime() {\n    const dateArea = document.getElementById(this.dateID);\n    const timeArea = document.getElementById(this.timeID);\n\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth();\n    let yyyy = today.getFullYear();\n    let hours = today.getHours();\n    let minutes = today.getMinutes();\n\n    dateArea.innerText = `${dd} ${this.month[mm]} ${yyyy}`;\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n\n    mm += 1;\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    dateArea.dateTime = `${yyyy}-${mm}-${dd}`;\n    timeArea.innerText = `${hours}:${minutes}`;\n    timeArea.dateTime = `${hours}:${minutes}`;\n  }\n\n  encryptText(text) {\n    return text;\n  }\n\n  bind() {\n    const modal = document.querySelector(`.${this.modalClass}`);\n    const toggle = document.querySelector(`.${this.toggleClass}`);\n    const content = modal.querySelector(`.${this.modalClass}__content`);\n    const input = document.querySelector(`.${this.inputClass}`);\n    const checkbox = document.getElementById(this.checkboxID);\n    const submit = document.querySelector(`.${this.submitClass}`);\n    const output = document.querySelector(`.${this.outputClass}`);\n\n    toggle.onclick = () => {\n      modal.classList.add(`${this.modalClass}--active`);\n      this.setTime();\n    };\n\n    modal.onclick = () => {\n      modal.classList.remove(`${this.modalClass}--active`);\n    };\n\n    content.onclick = e => {\n      e.stopPropagation();\n    };\n\n    input.onkeyup = e => {\n      e.stopPropagation();\n      const re = /[^A-Za-z\\s]/g;\n      input.value = input.value.replace(re, '');\n      input.value = input.value.toUpperCase();\n    };\n\n    submit.onclick = () => {\n      let text = input.value;\n      if (!checkbox.checked) {\n        text = text\n          .replace(/ /g, '')\n          .match(/.{1,5}/g)\n          .join(' ');\n      }\n\n      output.innerText = this.encryptText(text);\n    };\n  }\n\n  init() {\n    this.bind();\n  }\n}\n\nconst message = new Message(\n  'modal',\n  'modal__toggle',\n  'date',\n  'time',\n  'message__input',\n  'keep-formatting',\n  'message__btn',\n  'message__output',\n);\nexport default message;\n","import { Alphabet } from './data';\n\nclass Enigma {\n  constructor() {}\n\n  sumValues(a, b) {\n    return a + b > 25 ? a - 26 + b : a + b;\n  }\n\n  subValues(a, b) {\n    return a - b < 0 ? a + 26 - b : a - b;\n  }\n\n  encrypt(letter, rotors, rotorPositions, reflector) {\n    let result;\n    const letterIndex = Alphabet.indexOf(letter);\n    const numberOfRotors = rotorPositions.length;\n\n    for (let i = 0; i < numberOfRotors; i++) {\n      if (i == 0) {\n        result = Alphabet.indexOf(rotors[i][this.sumValues(rotorPositions[i], letterIndex)]);\n      } else {\n        result = Alphabet.indexOf(\n          rotors[i][this.sumValues(result, this.subValues(rotorPositions[i], rotorPositions[i - 1]))],\n        );\n      }\n    }\n\n    result = rotors[numberOfRotors - 1].indexOf(\n      Alphabet[\n        this.sumValues(\n          Alphabet.indexOf(reflector[this.subValues(result, rotorPositions[numberOfRotors - 1])]),\n          rotorPositions[numberOfRotors - 1],\n        )\n      ],\n    );\n\n    for (let i = numberOfRotors - 1; i >= 0; i--) {\n      if (i == 0) {\n        result = this.subValues(result, rotorPositions[0]);\n      } else {\n        result = rotors[i - 1].indexOf(\n          Alphabet[this.subValues(result, this.subValues(rotorPositions[i], rotorPositions[i - 1]))],\n        );\n      }\n    }\n\n    result = Alphabet[result];\n\n    return result;\n  }\n}\n\nconst enigma = new Enigma();\nexport default enigma;\n","import { RotorOption, ReflectorOption, Alphabet } from './data';\nimport Rotors from './rotors';\nimport Lampboard from './lampboard';\nimport Keyboard from './keyboard';\nimport Plugboard from './plugboard';\nimport Settings from './settings';\nimport Message from './message';\nimport Enigma from './enigma';\n\nclass App {\n  constructor(rotorSet, rotorSetNotch, reflector) {\n    this.rotorSet = rotorSet;\n    this.rotorSetNotch = rotorSetNotch;\n    this.reflector = reflector;\n  }\n\n  init() {\n    Keyboard.init();\n    Plugboard.init();\n    Rotors.init();\n    Settings.init();\n    Message.init();\n\n    const resetButton = document.querySelector('.reset');\n    resetButton.onclick = () => {\n      resetButton.disabled = true;\n      resetButton.style.transitionDuration = '0.5s';\n      resetButton.style.transform = 'rotate(360deg)';\n\n      this.reset();\n\n      setTimeout(() => {\n        resetButton.disabled = false;\n        resetButton.style.transitionDuration = '0s';\n        resetButton.style.transform = '';\n      }, 500);\n    };\n  }\n\n  reset() {\n    Rotors.reset();\n    Lampboard.reset();\n    Plugboard.reset();\n  }\n\n  changeRotor(rotor, notch, rotorIndex) {\n    this.rotorSet[rotorIndex] = rotor;\n    this.rotorSetNotch[rotorIndex] = notch;\n  }\n\n  changeReflector(reflector) {\n    this.reflector = reflector;\n  }\n\n  inputAction(letter) {\n    if (letter in Plugboard.connections) {\n      letter = Plugboard.connections[letter];\n    }\n\n    const rotorsToStep = [0];\n\n    for (let i = 0; i < this.rotorSet.length - 1; i++) {\n      const currentValue = Alphabet[Rotors.valueIndex[i]];\n      if (currentValue == this.rotorSetNotch[i]) {\n        rotorsToStep.push(i + 1);\n      } else {\n        break;\n      }\n    }\n\n    rotorsToStep.forEach(item => {\n      Rotors.stepRotor(item);\n    });\n\n    let result = Enigma.encrypt(letter, this.rotorSet, Rotors.valueIndex, this.reflector);\n\n    if (result in Plugboard.connections) {\n      result = Plugboard.connections[result];\n    }\n\n    Lampboard.newOutput(result);\n\n    return result;\n  }\n}\n\nconst app = new App(\n  [RotorOption.III.alphabet, RotorOption.II.alphabet, RotorOption.I.alphabet],\n  [RotorOption.III.notch, RotorOption.II.notch, RotorOption.I.notch],\n  ReflectorOption.B,\n);\napp.init();\n\nKeyboard.inputAction = letter => {\n  app.inputAction(letter);\n};\n\nSettings.changeReflector = value => {\n  app.reflector = ReflectorOption[value];\n  app.reset();\n};\n\nSettings.changeRotor = (rotor, value) => {\n  app.rotorSet[rotor] = RotorOption[value]['alphabet'];\n  app.rotorSetNotch[rotor] = RotorOption[value]['notch'];\n  app.reset();\n};\n\nMessage.encryptText = text => {\n  let output = '';\n\n  for (let i = 0; i < text.length; i++) {\n    if (text[i] == ' ') {\n      output += text[i];\n    } else {\n      output += app.inputAction(text[i]);\n    }\n  }\n\n  return output;\n};\n"],"names":["Alphabet","Layout","RotorOption","I","alphabet","notch","II","III","IV","V","ReflectorOption","A","B","C","Rotors","constructor","classAttribute","rotors","Array","from","document","querySelectorAll","reverse","valueIndex","setValue","rotorIndex","value","rotor","indexOf","mainWindow","querySelector","firstNextWindow","previousElementSibling","secondNextWindow","firstPrevWindow","nextElementSibling","secondPrevWindow","wheel","firstNextValueIndex","secondNextValueIndex","firstPrevValueIndex","secondPrevValueIndex","innerText","style","backgroundPositionY","stepRotor","newValueIndex","newValue","getCurrentState","bind","index","entries","btnNext","btnPrev","input","onclick","currentValueIndex","onkeypress","e","stopPropagation","onchange","validity","valid","length","toUpperCase","reset","i","init","Lampboard","lamps","lastIndex","newOutput","letter","newIndex","classList","add","currentIndex","remove","lampboard","Keyboard","keys","inputAction","key","onkeydown","re","test","keyboard","Plugboard","sockets","connections","prevSocket","createPlug","pairLetter","plug","createElement","tabIndex","setAttribute","disconnectSockets","plug1","plug2","letter1","letter2","connectSockets","socket1","socket2","appendChild","socket","blur","plugboard","Settings","classDialogue","classToggle","classSelect","dialogueClass","toggleClass","selectClass","changeRotor","changeReflector","createOption","option","dialogue","toggle","selects","reflectors","Object","forEach","item","settings","Message","classModal","idDate","idTime","classInput","idCheckbox","classSubmit","classOutput","modalClass","dateID","timeID","inputClass","checkboxID","submitClass","outputClass","month","setTime","dateArea","getElementById","timeArea","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","hours","getHours","minutes","getMinutes","dateTime","encryptText","text","modal","content","checkbox","submit","output","onkeyup","replace","checked","match","join","message","Enigma","sumValues","a","b","subValues","encrypt","rotorPositions","reflector","result","letterIndex","numberOfRotors","enigma","App","rotorSet","rotorSetNotch","resetButton","disabled","transitionDuration","transform","setTimeout","rotorsToStep","currentValue","push","app"],"mappings":"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"}