(function(){"use strict";const a=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],b=["Q","W","E","R","T","Z","U","I","O","A","S","D","F","G","H","J","K","P","Y","X","C","V","B","N","M","L"],c={I:{alphabet:["E","K","M","F","L","G","D","Q","V","Z","N","T","O","W","Y","H","X","U","S","P","A","I","B","R","C","J"],notch:"Q"},II:{alphabet:["A","J","D","K","S","I","R","U","X","B","L","H","W","T","M","C","Q","G","Z","N","P","Y","F","V","O","E"],notch:"E"},III:{alphabet:["B","D","F","H","J","L","C","P","R","T","X","V","Z","N","Y","E","I","W","G","A","K","M","U","S","Q","O"],notch:"V"},IV:{alphabet:["E","S","O","V","P","Z","J","A","Y","Q","U","I","R","H","X","L","N","F","T","G","K","D","C","M","W","B"],notch:"J"},V:{alphabet:["V","Z","B","R","G","I","T","Y","U","P","S","D","N","H","L","X","A","W","M","J","Q","O","F","E","C","K"],notch:"Z"}},d={A:["E","J","M","Z","A","L","Y","X","V","B","W","F","C","R","Q","U","O","N","T","S","P","I","K","H","G","D"],B:["Y","R","U","H","Q","S","L","D","P","X","N","G","O","K","M","I","E","B","F","Z","C","W","V","J","A","T"],C:["F","V","P","J","I","A","O","Y","E","D","R","Z","X","W","G","C","T","K","U","Q","S","B","N","M","H","L"]};const e=new class{constructor(a){this.rotors=Array.from(document.querySelectorAll(a)).reverse(),this.valueIndex=[]}setValue(b,c){const d=this.rotors[b],e=a.indexOf(c),f=d.querySelector(".rotors__window--active"),g=f.previousElementSibling,h=g.previousElementSibling,i=f.nextElementSibling,j=i.nextElementSibling,k=d.querySelector(".rotors__wheel"),l=25<e+1?0:e+1,m=25<e+2?e-26+2:e+2,n=0>e-1?25:e-1,o=0>e-2?e+26-2:e-2;f.value=a[e],g.innerText=a[l],h.innerText=a[m],i.innerText=a[n],j.innerText=a[o],k.style.backgroundPositionY=7*(100*e/26)+"%",this.valueIndex[b]=e}stepRotor(b){const c=25<this.valueIndex[b]+1?0:this.valueIndex[b]+1,d=a[c];this.setValue(b,d)}getCurrentState(){return this.valueIndex}bind(){for(let[b,c]of this.rotors.entries()){const d=c.querySelector(".rotors__btn--next"),e=c.querySelector(".rotors__btn--prev"),f=c.querySelector("input");d.onclick=()=>{const c=this.valueIndex[b],d=25<c+1?0:c+1;this.setValue(b,a[d])},e.onclick=()=>{const c=this.valueIndex[b],d=0>c-1?25:c-1;this.setValue(b,a[d])},f.onchange=()=>{f.validity.valid?(f.value=f.value.toUpperCase(),this.setValue(b,f.value)):f.value=""}}}reset(){for(let a=0;a<this.rotors.length;a++)this.setValue(a,"A")}init(){this.reset(),this.bind()}}(".rotors__item");const f=new class{constructor(a){this.lamps=document.querySelectorAll(a),this.lastIndex=null}newOutput(a){const c=b.indexOf(a);this.reset(),this.lamps[c].classList.add("lampboard__lamp--active"),this.lastIndex=c}reset(){const a=this.lastIndex||0;this.lamps[a].classList.remove("lampboard__lamp--active"),this.lastIndex=null}}(".lampboard__lamp");const g=new class{constructor(a){this.keys=document.querySelectorAll(a)}inputAction(a){return a}bind(){for(let a of this.keys){const b=a.innerText.toUpperCase();a.onclick=()=>{this.inputAction(b)}}document.onkeypress=a=>{const b=/^[A-Z]{1}/,c=a.key.toUpperCase();b.test(c)&&1==c.length&&this.inputAction(c)}}init(){this.bind()}}(".keyboard__btn");const h=new class{constructor(a){this.sockets=document.querySelectorAll(a),this.connections={},this.prevSocket=null}createPlug(a){const b=document.createElement("div");return b.classList.add("plugboard__plug"),b.tabIndex=0,b.setAttribute("role","button"),b.innerText=a.toUpperCase(),b}disconnectSockets(a,b,c,d){a.remove(),b.remove(),delete this.connections[c],delete this.connections[d]}connectSockets(a,b){const c=b.querySelector("span").innerText,d=a.querySelector("span").innerText,e=this.createPlug(c),f=this.createPlug(d);e.onclick=a=>{a.stopPropagation(),this.disconnectSockets(e,f,c,d)},f.onclick=a=>{a.stopPropagation(),this.disconnectSockets(e,f,c,d)},a.appendChild(e),b.appendChild(f),this.connections[c]=d,this.connections[d]=c}reset(){for(let a of this.sockets){const b=a.querySelector(".plugboard__plug");b&&b.remove()}this.connections={}}bind(){for(let a of this.sockets)a.onclick=()=>{this.prevSocket&&this.prevSocket!==a?(this.connectSockets(a,this.prevSocket),a.blur(),this.prevSocket=null):this.prevSocket=a}}init(){this.bind()}}(".plugboard__socket");const i=new class{constructor(a,b,c){this.dialogueClass=a,this.toggleClass=b,this.selectClass=c}changeRotor(a,b){return[a,b]}changeReflector(a){return a}createOption(a){const b=document.createElement("option");return b.value=a,b.innerText=a,b}bind(){const a=document.querySelector(`.${this.dialogueClass}`),b=document.querySelector(`.${this.toggleClass}`),e=Array.from(document.querySelectorAll(`.${this.selectClass}`)),f=Object.keys(d),g=Object.keys(c);b.addEventListener("click",()=>{b.classList.toggle(`${this.toggleClass}--active`),a.classList.toggle(`${this.dialogueClass}--active`)}),f.forEach(a=>{e[0].appendChild(this.createOption(a))}),e[0].onchange=()=>{this.changeReflector(e[0].value),e[0].blur()};for(let a=1;a<e.length;a++)g.forEach(b=>{e[a].appendChild(this.createOption(b))}),e[a].onchange=()=>{this.changeRotor(3-a,e[a].value),e[a].blur()}}init(){this.bind(),this.reset()}reset(){const a=Array.from(document.querySelectorAll(`.${this.selectClass}`));a[0].value="B",a[1].value="I",a[2].value="II",a[3].value="III"}}("settings__dialogue","settings__toggle","settings__select");const j=new class{constructor(){}sumValues(c,a){return 25<c+a?c-26+a:c+a}subValues(c,a){return 0>c-a?c+26-a:c-a}encrypt(b,c,d,e){let f;const g=a.indexOf(b),h=d.length;for(let j=0;j<h;j++)f=0==j?a.indexOf(c[j][this.sumValues(d[j],g)]):a.indexOf(c[j][this.sumValues(f,this.subValues(d[j],d[j-1]))]);f=c[h-1].indexOf(a[this.sumValues(a.indexOf(e[this.subValues(f,d[h-1])]),d[h-1])]);for(let g=h-1;0<=g;g--)f=0==g?this.subValues(f,d[0]):c[g-1].indexOf(a[this.subValues(f,this.subValues(d[g],d[g-1]))]);return f=a[f],f}};const k=new class{constructor(a,b,c){this.rotorSet=a,this.rotorSetNotch=b,this.reflector=c}init(){g.init(),h.init(),e.init(),i.init()}reset(){e.reset(),f.reset(),h.reset()}changeRotor(a,b,c){this.rotorSet[c]=a,this.rotorSetNotch[c]=b}changeReflector(a){this.reflector=a}inputAction(b){b in h.connections&&(b=h.connections[b]);const c=[0];for(let d=0;d<this.rotorSet.length-1;d++){const b=a[e.valueIndex[d]];if(b==this.rotorSetNotch[d])c.push(d+1);else break}c.forEach(a=>{e.stepRotor(a)});let d=j.encrypt(b,this.rotorSet,e.valueIndex,this.reflector);d in h.connections&&(d=h.connections[d]),f.newOutput(d)}}([c.III.alphabet,c.II.alphabet,c.I.alphabet],[c.III.notch,c.II.notch,c.I.notch],d.B);k.init(),g.inputAction=a=>{k.inputAction(a)},i.changeReflector=a=>{k.reflector=d[a],k.reset()},i.changeRotor=(a,b)=>{k.rotorSet[a]=c[b].alphabet,k.rotorSetNotch[a]=c[b].notch,k.reset()}})();
